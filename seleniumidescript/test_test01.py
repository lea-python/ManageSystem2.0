# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestTest01():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_test01(self):
    self.driver.get("http://tracker.yit.life:8816/site_no/auto_test/")
    self.driver.set_window_size(968, 528)
    self.driver.find_element(By.NAME, "username").click()
    self.driver.find_element(By.NAME, "username").send_keys("admin")
    self.driver.find_element(By.NAME, "password").send_keys("Abc123456")
    self.driver.find_element(By.CSS_SELECTOR, ".show-pwd > .svg-icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".login-btn").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".login-btn")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".el-button--default:nth-child(2) > span").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".el-button--default:nth-child(2)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".hamburger").click()
    self.driver.find_element(By.CSS_SELECTOR, ".menu-wrapper:nth-child(9) .el-submenu__title").click()
    self.driver.find_element(By.CSS_SELECTOR, ".is-opened .menu-wrapper:nth-child(2) span").click()
    element = self.driver.find_element(By.CSS_SELECTOR, "a > .is-active")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".el-col > .el-button").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".el-col > .el-button")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".el-col:nth-child(1) > .el-form-item .el-input__inner").click()
    self.driver.find_element(By.CSS_SELECTOR, ".el-col:nth-child(1) > .el-form-item .el-input__inner").send_keys("T1")
    self.driver.find_element(By.CSS_SELECTOR, ".vue-treeselect__input").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".el-col-12:nth-child(3)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    self.driver.find_element(By.CSS_SELECTOR, ".el-form-item:nth-child(1) .el-input--suffix > .el-input__inner").click()
    self.driver.find_element(By.CSS_SELECTOR, ".el-form-item:nth-child(1) .el-input--suffix > .el-input__inner").send_keys("hx1tx4")
    self.driver.find_element(By.CSS_SELECTOR, ".is-required:nth-child(2) .el-input__inner").click()
    self.driver.find_element(By.CSS_SELECTOR, ".is-required:nth-child(2) .el-input__inner").send_keys("Lea123456")
    self.driver.find_element(By.CSS_SELECTOR, ".is-required:nth-child(3) .el-input__inner").click()
    self.driver.find_element(By.CSS_SELECTOR, ".is-required:nth-child(3) .el-input__inner").send_keys("Lea123456")
    self.driver.find_element(By.CSS_SELECTOR, ".el-checkbox__inner").click()
    self.driver.find_element(By.CSS_SELECTOR, ".el-form-item:nth-child(5) span").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".el-form-item:nth-child(5) span")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
  
